# Colours
LIGHTBLUE="\[\e[38;5;14;1m\]"
BLUE="\[\e[38;5;27;1m\]"
YELLOW="\[\e[38;5;220;1m\]"
RED="\[\e[38;5;196;1m\]"
PURPLE="\[\e[38;5;164;1m\]"
LIME="\[\e[38;5;10;1m\]"
ORANGE="\[\e[38;5;208;1m\]"
DEFAULT="\[\e[0;00m\]"
  
timer_now() {
  date +%s%N
}

timer_start() {
  timer_start=${timer_start:-$(timer_now)}
}

timer_stop() {
  local delta_us=$((($(timer_now) - $timer_start) / 1000))
  
  local us=$((delta_us % 1000))
  local ms=$(((delta_us / 1000) % 1000))
  local s=$(((delta_us / 1000000) % 60))
  local m=$(((delta_us / 60000000) % 60))
  local h=$((delta_us / 3600000000))
  
  # Goal: always show around 3 digits of accuracy
  if ((h > 0)); then 
    timer_show=${h}h\ ${m}m
  elif ((m > 0)); then 
    timer_show=${m}m\ ${s}s
  elif ((s >= 10)); then 
    timer_show=${s}.$((ms / 100))\ s
  elif ((s > 0)); then 
    timer_show=${s}.$(printf %03d $ms)\ s
  elif ((ms >= 100)); then 
    timer_show=${ms}\ ms
  elif ((ms > 0)); then 
    timer_show=${ms}.$((us / 100))\ ms
  else 
    timer_show=${us}\ µs
  fi
  
  unset timer_start
}

repecho() { 
for ((i=0; i<$1; ++i)); 
  do echo -n "$2"; 
done; 
echo; 
}

FIRST_PROMPT=true
prompt_command() {
  ret=$?;
  timer_stop
  PS1=
  
  # If just opened terminal, time/error code should not appear
  if [ "$FIRST_PROMPT" = true ]; then
    FIRST_PROMPT=false
  # If return code is 0, display just the time elapsed, otherwise...
  elif [ "$ret" -eq 0 ]; then
    PS1+="$LIGHTBLUE[${timer_show}]\n"
  # ...display both time and return (error) code
  else
    PS1+="$LIGHTBLUE[${timer_show}] $RED[$ret]\n"
  fi
  
  # Add bar to separate commands, host user name, and current directory
  PS1+="$ORANGE$(repecho $COLUMNS ―)\n$YELLOW[$USER@$HOSTNAME] $PURPLE\w"
  
  # If in git repository, display current branch
  GITBRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'`
  if [[ ! -z $GITBRANCH ]]; then
    PS1+="$BLUE$GITBRANCH"
  fi
  
  # Add $ sign right before command
  PS1+="$LIME \$$DEFAULT "
}

trap 'timer_start' DEBUG
PROMPT_COMMAND=prompt_command