# Colours
LIGHTBLUE="\[\e[38;5;14;1m\]"
BLUE="\[\e[38;5;27;1m\]"
YELLOW="\[\e[38;5;220;1m\]"
RED="\[\e[38;5;196;1m\]"
PURPLE="\[\e[38;5;164;1m\]"
LIME="\[\e[38;5;10;1m\]"
ORANGE="\[\e[38;5;208;1m\]"
GRAY="\[\e[38;5;240;1m\]"
DEFAULT="\[\e[0;00m\]"

timer_now() {
  date +%s%N
}

timer_start() {
  timer_start=${timer_start:-$(timer_now)}
}

timer_stop() {
  local delta_us=$((($(timer_now) - $timer_start) / 1000))
  
  local us=$((delta_us % 1000))
  local ms=$(((delta_us / 1000) % 1000))
  local s=$(((delta_us / 1000000) % 60))
  local m=$(((delta_us / 60000000) % 60))
  local h=$((delta_us / 3600000000))
  
  # Goal: always show around 3 digits of accuracy
  if ((h > 0)); then 
    timer_show=${h}h\ ${m}m
  elif ((m > 0)); then 
    timer_show=${m}m\ ${s}s
  elif ((s >= 10)); then 
    timer_show=${s}.$((ms / 100))\ s
  elif ((s > 0)); then 
    timer_show=${s}.$(printf %03d $ms)\ s
  elif ((ms >= 100)); then 
    timer_show=${ms}\ ms
  elif ((ms > 0)); then 
    timer_show=${ms}.$((us / 100))\ ms
  else 
    timer_show=${us}\ µs
  fi
  
  unset timer_start
}

repecho() { 
for ((i=0; i<$1; ++i)); 
  do echo -n "$2"; 
done; 
}

trim_colour() {
  echo -n "${1:2:${#1}-4}"
}

pre_command() {
  if [ -z "$AT_PROMPT" ]; then
    return
  fi
  unset AT_PROMPT

  # Print gray line if command is entered
  if [ "$this_command" != "prompt_command" ]; then
    echo -e "$(trim_colour $GRAY)$(repecho $COLUMNS ―)$(trim_colour $DEFAULT)"
  fi
}

prompt_command() {
  ret=$?;
  timer_stop
  AT_PROMPT=1
  PS1=
  
   # If just opened terminal, time/error code should not appear, only orange line
  if [ -z "$FIRST_PROMPT" ]; then
    FIRST_PROMPT=1
    PS1+="$ORANGE$(repecho $COLUMNS ―)\n"
  # Print gray line + timer + non-zero error code + orange line if command entered
  elif [ "$previous_command" != "prompt_command" ]; then
    PS1+="$(trim_colour $GRAY)$(repecho $COLUMNS ―)\n$(trim_colour $DEFAULT)$LIGHTBLUE[${timer_show}] "
    if [ "$ret" -ne 0 ]; then
      PS1+="$RED[$ret] "
    fi
    PS1+="\n$ORANGE$(repecho $COLUMNS ―)\n"
  fi
  
  # Add bar to separate commands, host user name, and current directory
  PS1+="$YELLOW[\u@\h] $PURPLE\w"
  
  # If in git repository, display current branch
  GITBRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'`
  if [[ ! -z $GITBRANCH ]]; then
    PS1+="$BLUE$GITBRANCH"
  fi
  
  # Add $ sign right before command
  PS1+="$LIME \$$DEFAULT "
}

trap 'previous_command=$this_command; this_command=$BASH_COMMAND; pre_command; timer_start' DEBUG
PROMPT_COMMAND=prompt_command